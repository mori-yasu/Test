Clear materials such as water, glass, and diamonds are dielectrics.
When a light ray hits them, it splits into a reflected ray and a refracted (transmitted) ray.
We’ll handle that by randomly choosing between reflection or refraction and only generating one scattered ray per interaction.

The hardest part to debug is the refracted ray.
I usually first just have all the light refract if there is a refraction ray at all. For this project,
I tried to put two glass balls in our scene, and I got this (I have not told you how to do this right or wrong yet, but soon!):

Is that right? Glass balls look odd in real life. But no, it isn’t right.
The world should be flipped upside down and no weird black stuff.
I just printed out the ray straight through the middle of the image and it was clearly wrong. That often does the job.

The refraction is described by Snell’s law:
    n⋅sin(theta)=n′⋅sin(theta′)
Where n and n′ are the refractive indices (typically air = 1, glass = 1.3–1.7, diamond = 2.4) and the geometry is:


One troublesome practical issue is that when the ray is in the material with the higher refractive index,
there is no real solution to Snell’s law and thus there is no refraction possible. Here all the light is reflected,
and because in practice that is usually inside solid objects, it is called “total internal reflection”.
This is why sometimes the water-air boundary acts as a perfect mirror when you are submerged. The code for refraction is thus a bit more complicated than for reflection:

And the dielectric material that always refracts when possible is:

Attenuation is always 1 — the glass surface absorbs nothing.
The attenuation = vec3(1.0, 1.0, 0.0) above will also kill the blue channel which is the type of color bug that can be hard to find — it will give a color shift only.
Try it the way it is and then change it to attenuation = vec3(1.0, 1.0, 1.0) to see the difference.

If we try that out with these parameters:

(The reader Becker has pointed out that when there is a reflection ray the function returns false so there are no reflections.
He is right, and that is why there are none in the image above.
I am leaving this in rather than correcting this because it is a very interesting example of a major bug that still leaves a reasonably plausible image.
These sleeper bugs are the hardest bugs to find because we humans are not designed to find fault with what we see.)

Now real glass has reflectivity that varies with angle — look at a window at a steep angle and it becomes a mirror.
There is a big ugly equation for that, but almost everybody uses a simple and surprisingly simple polynomial approximation by Christophe Schlick:

This yields our full glass material:

An interesting and easy trick with dielectric spheres is to note that if you use a negative radius,
the geometry is unaffected but the surface normal points inward, so it can be used as a bubble to make a hollow glass sphere:


＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
水、ガラス、ダイヤモンドなどの透明な材料は誘電体(絶縁体)です。
光線が当たると、反射光線と屈折（透過）光線に分割されます。
反射または屈折のいずれかをランダムに選択し、インタラクションごとに1つの散乱光線のみを生成することでこれを処理します。

デバッグするのが最も難しい部分は屈折した光線です。
通常、屈折光線が存在する場合、最初にすべての光を屈折させます。このプロジェクトでは、シーンに2つのガラス玉を入れようとしましたが、これを手に入れました
（あとで）

OKに見えるか？ガラス玉は実際には奇妙に見えます。しかし、これは正しくない。世界はひっくり返され、奇妙な黒いものはありません。
画像の真ん中をまっすぐに光線を印刷したところ、明らかに間違っていました。それはしばしば仕事をします。

屈折はスネルの法則によって説明されます。
    n⋅sin（theta）= n′⋅sin（theta ′）
ここで、nとn 'は屈折率（通常は空気= 1、ガラス= 1.3〜1.7、ダイヤモンド= 2.4）で、ジオメトリは次のとおりです。


面倒な実用的な問題の1つは、光線がより高い屈折率を持つ材料にある場合、スネルの法則に対する実際の解決策がないため、屈折が不可能であるということです。ここでは、すべての光が反射され、
実際には、通常は固体オブジェクトの内部にあるため、「内部全反射」と呼ばれます。
これが、水没時に水と空気の境界が完全な鏡として機能することがある理由です。したがって、屈折のコードは反射のコードよりも少し複雑です。

そして、可能な場合に常に屈折する誘電体は次のとおりです。

減衰は常に1です—ガラス表面は何も吸収しません。
上記の減衰= vec3（1.0、1.0、0.0）は、見つけるのが難しい色のバグのタイプである青チャネルも殺します—色シフトのみを与えます。
そのままにして、減衰= vec3（1.0、1.0、1.0）に変更して、違いを確認します。

これらのパラメーターで試してみると：

（読者のベッカーは、反射光線がある場合、関数はfalseを返すため、反射がないことを指摘しました。
彼は正しい。だから、上の画像には何もない。
これは、かなり妥当なイメージを残したままの大きなバグの非常に興味深い例であるため、これを修正するのではなく、そのままにしておきます。
これらの寝台のバグは、私たち人間は私たちが見たものの欠点を見つけるように設計されていないため、見つけるのが最も難しいバグです。

現在、本物のガラスの反射率は角度によって変化します。急な角度で窓を見ると、鏡になります。
それには大きなbigい方程式がありますが、ほとんどすべての人がクリストフ・シュリックによる単純で驚くほど単純な多項式近似を使用しています。

これにより、完全なガラス材料が得られます。

誘電体球の興味深い簡単なトリックは、負の半径を使用すると、
ジオメトリは影響を受けませんが、表面の法線は内側を向いているため、気泡として使用して中空のガラス球を作成できます。

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
